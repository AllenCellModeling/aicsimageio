{"project": "aicsimageio", "project_url": "http://AllenCellModeling.github.io/aicsimageio/", "show_commit_url": "http://github.com/AllenCellModeling/aicsimageio/commit/", "hash_length": 8, "revision_to_hash": {"216": "042a55f6699002ec31f7fd72f87c841fadb18184", "226": "e505d4db1c0bb87a3d0ce16d1cf1996a86f5819e", "232": "429da135a7e8c2e800d80ffb88b4fd42d13b3710", "259": "b22b59d574b684dca0fd2fe8d0ece74ee5637526", "267": "8fd82710a5bda02be7584731bee179b619a27ba2", "270": "45d93f4d4cb90562c639279b76b2960379fd9932", "273": "60dca1d96a72604f518453062253ddf7c11fe42d", "277": "403a5065efdec8ad942b866bb11d815118e7acfe", "285": "addd72c8c7099cb05bdc9963daf33324136d1e0d", "296": "7c4e963eeb7eb6e0b83c9e14e27ea42114ca61a1", "305": "2d66d649228ed1b374bdf89b2ff95c77a1b4fb7d", "312": "9f1269f2115e9d98ba03e5c5b3f626fc0b8b1bc8", "319": "0f4259a18a09f777500b17debe3ea1e7b6b92bba", "341": "fa29ae5712a3bd4e31d6a7dbe57301359dcf8816", "349": "bfe1e04baa9d414838e986a79dd85fa0d0c2117a", "357": "8b2af4cbb4d6e7e1526575523340ea29e676797d", "364": "898ef3e7b3e7f0bc20aef1d82b3377928a7c91de", "379": "ca6ef6c15c62eb9bdc793f2904cf9b928e6e3b13", "390": "801a35574bb6cfa6eaa6c9f43f2d22b486d90d3c", "400": "b8068eddd8136fd784a7b7b191b4dce0ad95992e", "408": "3ef373312a5ee21bed600837d3dd8f1c29c4be6c", "412": "31c4a95cb55f5343b6daa32cf7d3fabb3244925a", "419": "59feba8b153f9966864dc24e7d6563a65168247c", "431": "1ee56a52a546a637e5a224b86c5b03180393c9a5", "439": "8bc67cd4ec20863cf0f89dcd2e047283340aa56f", "440": "aa741249d7a305315b00bdf7a5f9f812d22a8806", "443": "d5d026670861e6e25ed8764121c3c49f7d999196", "444": "7b526ac9fabc0650ae3d989a3b6765625d40594b", "445": "7824e13f9a773795a5ecd45a4fb4f580ebf8b6f7", "450": "f8ec41a1f40bf9eba37f6cf747ff80649978f4cd", "453": "011b6f59beece37afcd4cd14d5191429cc3b1a2c", "456": "25574ad7c590a46ea87fd5130bd42c7a5e3d297c", "459": "74ddc82d5db5b3263da62d20a27cea4384959f2c", "460": "6fd277fd8cf645c6a2d3adaa341d992e502171b4", "465": "11c5d0378914f0cdbdd0fed6e4fd7655b9fc5ec9", "466": "f86b9a3310a932921bfc96e213b36b2b676a5f10", "469": "1ecd1b11158041d15d010f1bcf5ae09f6cb41d40", "472": "a666aa6c496342d33c9c3eb8e1dbeb3db0bb26ed", "475": "27d2d811a1c5999aa482ac69a80c3324abcecc55", "478": "4a09e81721ed38e5e5bd701d43264ad4de5c5f25", "479": "5bde1e1c12d62f8534721cd27e17a80eaef713c6", "482": "06f8bd184c331cd67b243b5beb38efbb3c192bcd", "485": "a17af3eadfb0e4ad4b1dadff3860744548c92478", "488": "c58d45debcc04047f483c397f2dabbcf192da59d", "491": "707a174acbe00acdd6a148da74f7d973e34ae7fb", "492": "e4b1e5497295ecd65a467cf2ccf054169ee8e1b3", "503": "8ea8547cdca629870990fbd8e8d0de545f029853"}, "revision_to_date": {"216": 1564417915000, "226": 1570212260000, "232": 1570821509000, "259": 1572042422000, "267": 1572305076000, "270": 1572462925000, "273": 1572563263000, "277": 1572975616000, "285": 1580754670000, "296": 1582312520000, "305": 1583538871000, "312": 1583965830000, "319": 1584749741000, "341": 1589392464000, "349": 1590523389000, "357": 1591918133000, "364": 1592937876000, "379": 1599669855000, "390": 1600902611000, "400": 1605591108000, "408": 1607928995000, "412": 1610580511000, "419": 1611616991000, "431": 1611786227000, "439": 1611796420000, "440": 1611796420000, "443": 1611947345000, "444": 1611947385000, "445": 1611947385000, "450": 1612326743000, "453": 1613348454000, "456": 1613753167000, "459": 1613785272000, "460": 1613787308000, "465": 1613792806000, "466": 1613792806000, "469": 1613861652000, "472": 1614823169000, "475": 1614884390000, "478": 1614887199000, "479": 1614887199000, "482": 1615270988000, "485": 1616619391000, "488": 1616622074000, "491": 1616624797000, "492": 1616624797000, "503": 1617411011000}, "params": {"machine": ["github-ci"], "python": ["3.9"], "branch": ["main"]}, "graph_param_list": [{"machine": "github-ci", "python": "3.9", "branch": "main"}], "benchmarks": {"benchmark_image_containers.AICSImageSuite.peakmem_cached_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "name": "benchmark_image_containers.AICSImageSuite.peakmem_cached_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "96bf4fa0e641225c55328c135e642531039558988c72c875aca5e23f613ab871"}, "benchmark_image_containers.AICSImageSuite.peakmem_delayed_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "name": "benchmark_image_containers.AICSImageSuite.peakmem_delayed_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "45da41275febe6e273cc10ad8353b15f20a93c4c726c4b8300d2a8dfbf2b5f7f"}, "benchmark_image_containers.AICSImageSuite.peakmem_init": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "name": "benchmark_image_containers.AICSImageSuite.peakmem_init", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "41eb1224e96f965e90b8901a2af478c879b7f73537eac38521e88c429d31cfae"}, "benchmark_image_containers.AICSImageSuite.time_delayed_array_construct": {"code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "min_run_count": 2, "name": "benchmark_image_containers.AICSImageSuite.time_delayed_array_construct", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6eed7a5ccaff567783d23c19a2dda0f8e42cdb87a47fa85c9fd1461dc7d16abb", "warmup_time": -1}, "benchmark_image_containers.AICSImageSuite.time_init": {"code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "min_run_count": 2, "name": "benchmark_image_containers.AICSImageSuite.time_init", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0daa1cb3ddb62360b83782d2135230ac369091082a8d3c46638b59708d9dcb42", "warmup_time": -1}, "benchmark_image_containers.AICSImageSuite.time_random_many_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "min_run_count": 2, "name": "benchmark_image_containers.AICSImageSuite.time_random_many_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "43b801cfc694862f93ae3d7c393ccd2706466deccead995330a4e9a1b29cd7cf", "warmup_time": -1}, "benchmark_image_containers.AICSImageSuite.time_random_single_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage", "min_run_count": 2, "name": "benchmark_image_containers.AICSImageSuite.time_random_single_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "41be74612bc0a193583da023be5075b96ad702d1263bf9958a55836a894b1197", "warmup_time": -1}, "benchmark_image_containers.DefaultReaderSuite.peakmem_cached_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "name": "benchmark_image_containers.DefaultReaderSuite.peakmem_cached_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "8c2c6614efce1269dfc93469ee8c8a92550bfa638687d6716d92604e992f8271"}, "benchmark_image_containers.DefaultReaderSuite.peakmem_delayed_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "name": "benchmark_image_containers.DefaultReaderSuite.peakmem_delayed_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "8320bfb0911d78a1ab48d8f1fb5b712e2fb0cfd3bb851007e55ce7d861eb1ad7"}, "benchmark_image_containers.DefaultReaderSuite.peakmem_init": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "name": "benchmark_image_containers.DefaultReaderSuite.peakmem_init", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "99ab4d182e621e8fc1eca32dcde0c7363802ac24469c8447293e3cf88cf62798"}, "benchmark_image_containers.DefaultReaderSuite.time_delayed_array_construct": {"code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "min_run_count": 2, "name": "benchmark_image_containers.DefaultReaderSuite.time_delayed_array_construct", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "04b658d24cab1b42c61c5f03f9c56be451615ab70168bb1fd25fb33474380ac3", "warmup_time": -1}, "benchmark_image_containers.DefaultReaderSuite.time_init": {"code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "min_run_count": 2, "name": "benchmark_image_containers.DefaultReaderSuite.time_init", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9c3c0045a2d67004a835739e10a10103dd1945598b5a9183f629c56ed48226b7", "warmup_time": -1}, "benchmark_image_containers.DefaultReaderSuite.time_random_many_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "min_run_count": 2, "name": "benchmark_image_containers.DefaultReaderSuite.time_random_many_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c45ca3af4f59df061a0af36458f3b245db61576200eb2948a446e4495544121e", "warmup_time": -1}, "benchmark_image_containers.DefaultReaderSuite.time_random_single_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader", "min_run_count": 2, "name": "benchmark_image_containers.DefaultReaderSuite.time_random_single_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c1150a28313339726722f6a97fdea2edc219d94efef45814df200ccc1f7f440a", "warmup_time": -1}, "benchmark_image_containers.LifReaderSuite.peakmem_cached_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "name": "benchmark_image_containers.LifReaderSuite.peakmem_cached_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "921b385dd89b3219e9effe2552e0b1d3d1426a36f507ddc5e8694ffedbb148b2"}, "benchmark_image_containers.LifReaderSuite.peakmem_delayed_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "name": "benchmark_image_containers.LifReaderSuite.peakmem_delayed_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "461fb4aa314f285cb19347e6de3a32fe260e0995ee7a6b2d1395cea3586216c9"}, "benchmark_image_containers.LifReaderSuite.peakmem_init": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "name": "benchmark_image_containers.LifReaderSuite.peakmem_init", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "788a2e9a0f2bee5752657c04bf6faedacecddad5bd40e6059d52e3d8506c1bc3"}, "benchmark_image_containers.LifReaderSuite.time_delayed_array_construct": {"code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "min_run_count": 2, "name": "benchmark_image_containers.LifReaderSuite.time_delayed_array_construct", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "12789a892c5bf5179c4042f06dbea6bdf8e001cd82ead6c36af4fedc2b239b8c", "warmup_time": -1}, "benchmark_image_containers.LifReaderSuite.time_init": {"code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "min_run_count": 2, "name": "benchmark_image_containers.LifReaderSuite.time_init", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e2db50f77576d6e5fad783fc0561c2abaf9f24e30009412f32f259c3e2cacbcb", "warmup_time": -1}, "benchmark_image_containers.LifReaderSuite.time_random_many_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "min_run_count": 2, "name": "benchmark_image_containers.LifReaderSuite.time_random_many_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7b225feb5010d57c78cff5b71e2a1f7794526e118d70321bf533fe3448afe707", "warmup_time": -1}, "benchmark_image_containers.LifReaderSuite.time_random_single_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass LifReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.LifReader", "min_run_count": 2, "name": "benchmark_image_containers.LifReaderSuite.time_random_single_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/merged-tiles.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_4_c_2_z_1.lif'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/tiled.lif'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "399a2998b1b47819e475176acc36c25bf872d197bf5ba4092e4d9d008689eaea", "warmup_time": -1}, "benchmark_image_containers.OmeTiffReaderSuite.peakmem_cached_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "name": "benchmark_image_containers.OmeTiffReaderSuite.peakmem_cached_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "090140660563b63c285d951db50a205dc543c8e36b9d6edaffde4f20b2993c18"}, "benchmark_image_containers.OmeTiffReaderSuite.peakmem_delayed_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "name": "benchmark_image_containers.OmeTiffReaderSuite.peakmem_delayed_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "117314462258bb413d8a594045a7d5c2e640c0e244232ad55d68b1b838925250"}, "benchmark_image_containers.OmeTiffReaderSuite.peakmem_init": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "name": "benchmark_image_containers.OmeTiffReaderSuite.peakmem_init", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "b133568315f464830f26783e59d7de7af6ab35bb092f30ee96c5630f2e75dced"}, "benchmark_image_containers.OmeTiffReaderSuite.time_delayed_array_construct": {"code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "min_run_count": 2, "name": "benchmark_image_containers.OmeTiffReaderSuite.time_delayed_array_construct", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5b550d8cbf7e60d4689d61a2d1e78b2685a51250c9577f131231c74daa7c6f03", "warmup_time": -1}, "benchmark_image_containers.OmeTiffReaderSuite.time_init": {"code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "min_run_count": 2, "name": "benchmark_image_containers.OmeTiffReaderSuite.time_init", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "95e863db5f420ba0fd2ecacc7053c43fd35e05dc6d58acbf5a37ca225d040933", "warmup_time": -1}, "benchmark_image_containers.OmeTiffReaderSuite.time_random_many_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "min_run_count": 2, "name": "benchmark_image_containers.OmeTiffReaderSuite.time_random_many_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "700f8a4cb7636cccd4a198796bfd02e8877dece615ebecd5d1ed72dc7c57e492", "warmup_time": -1}, "benchmark_image_containers.OmeTiffReaderSuite.time_random_single_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader", "min_run_count": 2, "name": "benchmark_image_containers.OmeTiffReaderSuite.time_random_single_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "53ac4ffdccc00005bec62e153995832355ee90516165b4b01f12eb1a852c3fa1", "warmup_time": -1}, "benchmark_image_containers.TiffReaderSuite.peakmem_cached_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "name": "benchmark_image_containers.TiffReaderSuite.peakmem_cached_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "380c30e31530f72d60df70be0bf5e1c6b6ec2ea43660a9942022bd16f1c5bbed"}, "benchmark_image_containers.TiffReaderSuite.peakmem_delayed_array": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "name": "benchmark_image_containers.TiffReaderSuite.peakmem_delayed_array", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "1b89b13cf4cfeb9ef89bc51e3d06f29fbaf2aa277fa28c9a4ed4e0315f725201"}, "benchmark_image_containers.TiffReaderSuite.peakmem_init": {"code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "name": "benchmark_image_containers.TiffReaderSuite.peakmem_init", "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "7888ed2831c367da7c745278135e4891ff091aa21412e70eafc30389893d445a"}, "benchmark_image_containers.TiffReaderSuite.time_delayed_array_construct": {"code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "min_run_count": 2, "name": "benchmark_image_containers.TiffReaderSuite.time_delayed_array_construct", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9b14b644d537b9f93ae908f45c4471483b0eaf08719b8ac15d83d8f5a28041f6", "warmup_time": -1}, "benchmark_image_containers.TiffReaderSuite.time_init": {"code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "min_run_count": 2, "name": "benchmark_image_containers.TiffReaderSuite.time_init", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f0bd4ab81305cb3acd16f2654bf76a50614610b2383e75676dab71527afbbf76", "warmup_time": -1}, "benchmark_image_containers.TiffReaderSuite.time_random_many_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "min_run_count": 2, "name": "benchmark_image_containers.TiffReaderSuite.time_random_many_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4c3ba92264c6a693375a85e860bd724f7e46f79d66ab78f64ad7f72b9619712b", "warmup_time": -1}, "benchmark_image_containers.TiffReaderSuite.time_random_single_chunk_read": {"code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader", "min_run_count": 2, "name": "benchmark_image_containers.TiffReaderSuite.time_random_single_chunk_read", "number": 0, "param_names": ["param1"], "params": [["'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'", "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "49d4c358c8b55438953f8d93e53f38a422b308c2c168d6c532f7c74924e4d95c", "warmup_time": -1}, "benchmark_lib.LibSuite.time_base_import": {"code": "class LibSuite:\n    def time_base_import(self):\n        \"\"\"\n        Benchmark how long it takes to import the library as a whole.\n        \"\"\"\n        import aicsimageio  # noqa: F401", "min_run_count": 2, "name": "benchmark_lib.LibSuite.time_base_import", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "de34223f99008c7ec7fa41b0fdefbd72f693e3f48764e2f4b391ff101034a389", "warmup_time": -1}}, "machines": {"github-ci": {"machine": "github-ci", "version": 1}}, "tags": {"v3.0.0": 216, "v3.0.1": 226, "v3.0.2": 232, "v3.0.3": 259, "v3.0.4": 267, "v3.0.5": 270, "v3.0.6": 273, "v3.0.7": 277, "v3.1.0": 285, "v3.1.1": 296, "v3.1.2": 305, "v3.1.3": 312, "v3.1.4": 319, "v3.2.0": 341, "v3.2.1": 349, "v3.2.2": 357, "v3.2.3": 364, "v3.3.0": 379, "v3.3.1": 390, "v3.3.2": 400, "v3.3.3": 408, "v3.3.4": 412, "v3.3.5": 419, "v4.0.0.dev0": 439, "v4.0.0.dev1": 445, "v4.0.0.dev2": 466, "v4.0.0.dev3": 479, "v4.0.0.dev4": 491}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}