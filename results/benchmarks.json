{
    "benchmark_image_containers.AICSImageSuite.peakmem_cached_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "name": "benchmark_image_containers.AICSImageSuite.peakmem_cached_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "96bf4fa0e641225c55328c135e642531039558988c72c875aca5e23f613ab871"
    },
    "benchmark_image_containers.AICSImageSuite.peakmem_delayed_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "name": "benchmark_image_containers.AICSImageSuite.peakmem_delayed_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "45da41275febe6e273cc10ad8353b15f20a93c4c726c4b8300d2a8dfbf2b5f7f"
    },
    "benchmark_image_containers.AICSImageSuite.peakmem_init": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "name": "benchmark_image_containers.AICSImageSuite.peakmem_init",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "41eb1224e96f965e90b8901a2af478c879b7f73537eac38521e88c429d31cfae"
    },
    "benchmark_image_containers.AICSImageSuite.time_delayed_array_construct": {
        "code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "min_run_count": 2,
        "name": "benchmark_image_containers.AICSImageSuite.time_delayed_array_construct",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "6eed7a5ccaff567783d23c19a2dda0f8e42cdb87a47fa85c9fd1461dc7d16abb",
        "warmup_time": -1
    },
    "benchmark_image_containers.AICSImageSuite.time_init": {
        "code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "min_run_count": 2,
        "name": "benchmark_image_containers.AICSImageSuite.time_init",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0daa1cb3ddb62360b83782d2135230ac369091082a8d3c46638b59708d9dcb42",
        "warmup_time": -1
    },
    "benchmark_image_containers.AICSImageSuite.time_random_many_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "min_run_count": 2,
        "name": "benchmark_image_containers.AICSImageSuite.time_random_many_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "43b801cfc694862f93ae3d7c393ccd2706466deccead995330a4e9a1b29cd7cf",
        "warmup_time": -1
    },
    "benchmark_image_containers.AICSImageSuite.time_random_single_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass AICSImageSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = AICSImage",
        "min_run_count": 2,
        "name": "benchmark_image_containers.AICSImageSuite.time_random_single_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "41be74612bc0a193583da023be5075b96ad702d1263bf9958a55836a894b1197",
        "warmup_time": -1
    },
    "benchmark_image_containers.DefaultReaderSuite.peakmem_cached_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "name": "benchmark_image_containers.DefaultReaderSuite.peakmem_cached_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "8c2c6614efce1269dfc93469ee8c8a92550bfa638687d6716d92604e992f8271"
    },
    "benchmark_image_containers.DefaultReaderSuite.peakmem_delayed_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "name": "benchmark_image_containers.DefaultReaderSuite.peakmem_delayed_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "8320bfb0911d78a1ab48d8f1fb5b712e2fb0cfd3bb851007e55ce7d861eb1ad7"
    },
    "benchmark_image_containers.DefaultReaderSuite.peakmem_init": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "name": "benchmark_image_containers.DefaultReaderSuite.peakmem_init",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "99ab4d182e621e8fc1eca32dcde0c7363802ac24469c8447293e3cf88cf62798"
    },
    "benchmark_image_containers.DefaultReaderSuite.time_delayed_array_construct": {
        "code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.DefaultReaderSuite.time_delayed_array_construct",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "04b658d24cab1b42c61c5f03f9c56be451615ab70168bb1fd25fb33474380ac3",
        "warmup_time": -1
    },
    "benchmark_image_containers.DefaultReaderSuite.time_init": {
        "code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.DefaultReaderSuite.time_init",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9c3c0045a2d67004a835739e10a10103dd1945598b5a9183f629c56ed48226b7",
        "warmup_time": -1
    },
    "benchmark_image_containers.DefaultReaderSuite.time_random_many_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.DefaultReaderSuite.time_random_many_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c45ca3af4f59df061a0af36458f3b245db61576200eb2948a446e4495544121e",
        "warmup_time": -1
    },
    "benchmark_image_containers.DefaultReaderSuite.time_random_single_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass DefaultReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.DefaultReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.DefaultReaderSuite.time_random_single_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.bmp'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.jpg'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/example.png'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c1150a28313339726722f6a97fdea2edc219d94efef45814df200ccc1f7f440a",
        "warmup_time": -1
    },
    "benchmark_image_containers.OmeTiffReaderSuite.peakmem_cached_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "name": "benchmark_image_containers.OmeTiffReaderSuite.peakmem_cached_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "090140660563b63c285d951db50a205dc543c8e36b9d6edaffde4f20b2993c18"
    },
    "benchmark_image_containers.OmeTiffReaderSuite.peakmem_delayed_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "name": "benchmark_image_containers.OmeTiffReaderSuite.peakmem_delayed_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "117314462258bb413d8a594045a7d5c2e640c0e244232ad55d68b1b838925250"
    },
    "benchmark_image_containers.OmeTiffReaderSuite.peakmem_init": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "name": "benchmark_image_containers.OmeTiffReaderSuite.peakmem_init",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "b133568315f464830f26783e59d7de7af6ab35bb092f30ee96c5630f2e75dced"
    },
    "benchmark_image_containers.OmeTiffReaderSuite.time_delayed_array_construct": {
        "code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.OmeTiffReaderSuite.time_delayed_array_construct",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "5b550d8cbf7e60d4689d61a2d1e78b2685a51250c9577f131231c74daa7c6f03",
        "warmup_time": -1
    },
    "benchmark_image_containers.OmeTiffReaderSuite.time_init": {
        "code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.OmeTiffReaderSuite.time_init",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "95e863db5f420ba0fd2ecacc7053c43fd35e05dc6d58acbf5a37ca225d040933",
        "warmup_time": -1
    },
    "benchmark_image_containers.OmeTiffReaderSuite.time_random_many_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.OmeTiffReaderSuite.time_random_many_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "700f8a4cb7636cccd4a198796bfd02e8877dece615ebecd5d1ed72dc7c57e492",
        "warmup_time": -1
    },
    "benchmark_image_containers.OmeTiffReaderSuite.time_random_single_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass OmeTiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.OmeTiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.OmeTiffReaderSuite.time_random_single_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "53ac4ffdccc00005bec62e153995832355ee90516165b4b01f12eb1a852c3fa1",
        "warmup_time": -1
    },
    "benchmark_image_containers.TiffReaderSuite.peakmem_cached_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_cached_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the whole image container once the\n        current scene is read into memory.\n    \n        Serves as a comparison against the delayed construct and as a sanity check.\n        Estimate: `r.data.size * r.data.itemsize` + some metadata and object overhead.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.data\n        return r\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "name": "benchmark_image_containers.TiffReaderSuite.peakmem_cached_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "380c30e31530f72d60df70be0bf5e1c6b6ec2ea43660a9942022bd16f1c5bbed"
    },
    "benchmark_image_containers.TiffReaderSuite.peakmem_delayed_array": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_delayed_array(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for the image container once the\n        delayed dask array is constructed.\n    \n        Serves as a comparison against the init.\n        Metadata should account for most of the memory difference.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n        r.dask_data\n        return r\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "name": "benchmark_image_containers.TiffReaderSuite.peakmem_delayed_array",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "1b89b13cf4cfeb9ef89bc51e3d06f29fbaf2aa277fa28c9a4ed4e0315f725201"
    },
    "benchmark_image_containers.TiffReaderSuite.peakmem_init": {
        "code": "class _ImageContainerMemorySuite:\n    def peakmem_init(self, img_path):\n        \"\"\"\n        Benchmark how much memory is used for just the initialized image container.\n        \"\"\"\n        return self.ImageContainer(img_path)\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "name": "benchmark_image_containers.TiffReaderSuite.peakmem_init",
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "7888ed2831c367da7c745278135e4891ff091aa21412e70eafc30389893d445a"
    },
    "benchmark_image_containers.TiffReaderSuite.time_delayed_array_construct": {
        "code": "class _ImageContainerTimeSuite:\n    def time_delayed_array_construct(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to construct the delayed dask array for a file.\n        \"\"\"\n        self.ImageContainer(img_path).dask_data\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.TiffReaderSuite.time_delayed_array_construct",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9b14b644d537b9f93ae908f45c4471483b0eaf08719b8ac15d83d8f5a28041f6",
        "warmup_time": -1
    },
    "benchmark_image_containers.TiffReaderSuite.time_init": {
        "code": "class _ImageContainerTimeSuite:\n    def time_init(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to validate a file and finish general setup.\n        \"\"\"\n        self.ImageContainer(img_path)\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.TiffReaderSuite.time_init",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "f0bd4ab81305cb3acd16f2654bf76a50614610b2383e75676dab71527afbbf76",
        "warmup_time": -1
    },
    "benchmark_image_containers.TiffReaderSuite.time_random_many_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_many_chunk_read(self, img_path):\n        \"\"\"\n        Open a file, get many chunks out of the file at once.\n    \n        I.E. \"Pull the DNA and Nucleus channel z-stacks, for the middle 50% timepoints\".\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                a = random.randint(0, size - 1)\n                b = random.randint(0, size - 1)\n                lower = min(a, b)\n                upper = max(a, b)\n                random_index_selections[dim] = slice(lower, upper, 1)\n    \n        r.get_image_dask_data(r.dims.order, **random_index_selections).compute()\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.TiffReaderSuite.time_random_many_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "4c3ba92264c6a693375a85e860bd724f7e46f79d66ab78f64ad7f72b9619712b",
        "warmup_time": -1
    },
    "benchmark_image_containers.TiffReaderSuite.time_random_single_chunk_read": {
        "code": "class _ImageContainerTimeSuite:\n    def time_random_single_chunk_read(self, img_path):\n        \"\"\"\n        Benchmark how long it takes to read a single chunk out of a file.\n    \n        I.E. \"Pull just the Brightfield channel z-stack.\n        \"\"\"\n        r = self.ImageContainer(img_path)\n    \n        random_index_selections = {}\n        for dim, size in zip(r.dims.order, r.dims.shape):\n            if dim not in self.DEFAULT_CHUNK_DIMS:\n                random_index_selections[dim] = random.randint(0, size - 1)\n    \n        valid_dims_to_return = \"\".join(\n            [d for d in r.dims.order if d in self.DEFAULT_CHUNK_DIMS]\n        )\n        r.get_image_dask_data(valid_dims_to_return, **random_index_selections).compute()\n\nclass TiffReaderSuite:\n    def setup(self, img_path):\n        random.seed(42)\n        self.ImageContainer = readers.TiffReader",
        "min_run_count": 2,
        "name": "benchmark_image_containers.TiffReaderSuite.time_random_single_chunk_read",
        "number": 0,
        "param_names": [
            "param1"
        ],
        "params": [
            [
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/3d-cell-viewer.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/actk.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pipeline-4.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/pre-variance-cfe.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_10_c_3_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_10_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_1_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_2_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_3_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_1_t_1_c_6_z_1_RGB.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/s_3_t_1_c_3_z_5.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variable_scene_shape_first_scene_pyramid.ome.tiff'",
                "'/home/runner/work/aicsimageio/aicsimageio/aicsimageio/tests/resources/variance-cfe.ome.tiff'"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "49d4c358c8b55438953f8d93e53f38a422b308c2c168d6c532f7c74924e4d95c",
        "warmup_time": -1
    },
    "benchmark_lib.LibSuite.time_base_import": {
        "code": "class LibSuite:\n    def time_base_import(self):\n        \"\"\"\n        Benchmark how long it takes to import the library as a whole.\n        \"\"\"\n        import aicsimageio  # noqa: F401",
        "min_run_count": 2,
        "name": "benchmark_lib.LibSuite.time_base_import",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "de34223f99008c7ec7fa41b0fdefbd72f693e3f48764e2f4b391ff101034a389",
        "warmup_time": -1
    },
    "version": 2
}